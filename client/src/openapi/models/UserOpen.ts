/* tslint:disable */
/* eslint-disable */
/**
 * Marron API
 * API of Marron
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserOpen
 */
export interface UserOpen {
    /**
     * 
     * @type {string}
     * @memberof UserOpen
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof UserOpen
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserOpen
     */
    isDev: boolean;
}

/**
 * Check if a given object implements the UserOpen interface.
 */
export function instanceOfUserOpen(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "isDev" in value;

    return isInstance;
}

export function UserOpenFromJSON(json: any): UserOpen {
    return UserOpenFromJSONTyped(json, false);
}

export function UserOpenFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserOpen {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'isDev': json['is_dev'],
    };
}

export function UserOpenToJSON(value?: UserOpen | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'is_dev': value.isDev,
    };
}

